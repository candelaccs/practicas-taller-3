program ejercicio1; //<>//
type

 str27 = string [27];
 redad = 12..100;
 
 socio = record
  numero: integer;
  nombre: str27;
  edad: redad;
  
 arbol = ^nodo;
 nodo = record;
  dato: socio;
  HI: arbol;
  HD: arbol;
 end;
 
 
procedure crearArbol (var a: arbol);
 
 procedure leer (var s: socio);
 begin
  
  writeln ('ingresar numero de socio');
  readln (s.numero);
  if (s.numero <> 0 ) then begin
   writeln ('Ã­ngresar un nombre');
   readln (s.nombre);
   writeln ('ingresar edad');
   readln (s.edad);
  end;
 end; 
 
 procedure agregar (var a: arbol; s:socio);
 begin

  if (a = nil) then begin // si el arbol-raiz esta vacio entonces pongo el 1er elemento //
   new (a);
   a^.dato:= s; // cargo primer dato //
   a^.HI:= nil; // pongo hijo izquierdo en nil para dejarlo preparado y que luego pueda recibir un dato //
   a^.HD:= nil; // lo mismo //
  end
  else 
   if (s.numero <= a^.dato.numero) then
    agregar (a^.HI, socio)
   else 
    agregar (a^.HD, socio);
 end;               
 
procedure informarMaximo (a: arbol); // es necesario hacer este procedimiento? //

 function maximo (a:arbol): integer;
 begin
  
  if (a = nil) then
   maximo:= -1
  else
   if (a^.HD = nil) then
    maximo:= a^.dato.numero;
   else
    maximo (a^.HD);
 end;
 
var
 max: integer;
begin
  max:= maximo (a);
  if (max = -1) then
   writeln ('la lista esta vacia')
  else
   writeln ('el numero de socio es' max);
end;
   
    
var 
 s: socio;
begin // no deberia ser de forma recursiva esto? //
 a:= nil;
 leer(a, s);
 while (s.numero <> 0) do begin
  agregar (a, s);
  leer (s);
 end;
end;
 
var
 a: arbol;
 
begin

 crearArbol (a);
